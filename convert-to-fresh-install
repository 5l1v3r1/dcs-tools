#!/bin/bash
set_dir () { DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"; }; set_dir
safe_source () { source $1; set_dir; }

if [[ $(id -u) > 0 ]]; then sudo $0 "$@"; exit; fi

safe_source $DIR/aktos-bash-lib/basic-functions.sh

show_help () {

    cat <<EOF

    usage:

        $(basename $0) --root-dir /path/to/os-root [--skip-ssh-key]

    options:

        --root-dir	     : Root dir to manipulate
        --skip-ssh-key 	 : Skip generating a new ssh key
        --user           : Username to manipulate to

EOF
}

die () {
    echo "ERROR:"
    echo "ERROR: $@"
    echo "ERROR:"
    show_help
    exit 55
}

skip_ssh_key=
root_dir=
user=
while :; do
    case $1 in
        -h|-\?|--help)
            show_help    # Display a usage synopsis.
            exit
            ;;
        --skip-ssh-key)       # Takes an option argument; ensure it has been specified.
            skip_ssh_key=true
            ;;
        --root-dir)
            if [ "$2" ]; then
                root_dir=$2
                shift
            else
                die '"--root-dir" requires a non-empty option argument.'
            fi
            ;;
        --user)
            if [ "$2" ]; then
                user=$2
                shift
            else
                die '"--user" requires a non-empty option argument.'
            fi
            ;;
        -?*)
            printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
            ;;
        *)               # Default case: No more options, so break out of the loop.
            break
    esac

    shift
done

[[ -d $root_dir ]] || die "Root dir is required"
[[ $user ]] || die "Username is required"
[[ -d $root_dir/home/$user ]] || die "User does not seem valid"

new_hostname=$(printf '0x%x' $(date +%s))
new_hostname=${new_hostname/0x}

echo "renew host name to $new_hostname"
echo "127.0.0.1      $new_hostname" | sudo tee -a $root_dir/etc/hosts
echo $new_hostname | sudo tee $root_dir/etc/hostname

if [[ ! $skip_ssh_key ]]; then
    echo "renew ssh private id"
    ssh-keygen -t rsa -b 4096 -N "" -C "$user@$new_hostname" -f $root_dir/home/$user/.ssh/id_rsa
else
    echo "Skipping SSH key generation..."
fi

echo_green "Use following public key to register to server:"
cat $root_dir/home/$user/.ssh/id_rsa.pub
